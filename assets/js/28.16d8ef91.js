(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{633:function(t,s,a){"use strict";a.r(s);var n=a(3),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("你有没有思考过一个问题，作为一个原始值number类型，为什么它可以调用方法。比如说")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// string")]),t._v("\n")])])]),a("p",[a("code",[t._v("num")]),t._v(" 难道不是一个原始类型吗？没错，它是原始类型。那既然如此，为什么会有方法？")]),t._v(" "),a("p",[t._v("这就要提到 JavaScript 的小心思——原始包装类")]),t._v(" "),a("h2",{attrs:{id:"概览"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概览"}},[t._v("#")]),t._v(" 概览")]),t._v(" "),a("p",[t._v("JavaScript为了方便我们操作原始值，为我们提供了三种特殊的引用类型：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Number")])]),t._v(" "),a("li",[a("code",[t._v("String")])]),t._v(" "),a("li",[a("code",[t._v("Boolean")])])]),t._v(" "),a("blockquote",[a("p",[t._v("注意：这和转型函数 "),a("code",[t._v("Number()")]),t._v("这几个没有啥关系，一个是函数，一个是引用类型")])]),t._v(" "),a("p",[t._v("每当我们用到这些原始值的方法或者属性的时候，JavaScript帮我们自动创建一个相应的原始包装类对象。")]),t._v(" "),a("p",[a("strong",[t._v("我们用原始包装类型分析一下下面的代码：")])]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// string")]),t._v("\n")])])]),a("p",[t._v("在执行"),a("code",[t._v("num.toString()")]),t._v("的时候发生了什么：")]),t._v(" "),a("ol",[a("li",[t._v("创建一个"),a("code",[t._v("Number")]),t._v("类型的实例对象，并且这个对象的值为12")]),t._v(" "),a("li",[t._v("对这个"),a("strong",[t._v("对象")]),t._v("调用它的方法"),a("code",[t._v("toString()")]),t._v(" ，这个方法正好会返回一个字符类型的12")]),t._v(" "),a("li",[t._v("执行完之后，销毁这个对象")])]),t._v(" "),a("p",[t._v("转成代码，我们可以这么理解这三个步骤")]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnewObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 '12'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 销毁对象")]),t._v("\nnewObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"包装类型与引用类型的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包装类型与引用类型的区别"}},[t._v("#")]),t._v(" 包装类型与引用类型的区别")]),t._v(" "),a("p",[a("strong",[t._v("所生成对象的生命周期不同。")])]),t._v(" "),a("ul",[a("li",[t._v("通过new关键字实例化的对象，只会在离开作用域的时候销毁")]),t._v(" "),a("li",[t._v("通过原始包装类型"),a("strong",[t._v("自动生成")]),t._v("的对象，在使用完之后直接就会销毁")])]),t._v(" "),a("p",[t._v("注意措辞，这里说的是自动生成，也就是通过"),a("strong",[t._v("读模式")]),t._v("访问的时候。也就是说，我们如果手动使用原始值包装类是"),a("strong",[t._v("不会")]),t._v("被自动销毁的。")]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" numStr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行完之后, num所生成的对象就又被销毁了, 访问不到")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" numObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我们手动创建的一个 Number 对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// let numObj = new Number(12); 这样做也可以, 但是不推荐")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("numObj "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("blockquote",[a("p",[a("strong",[t._v("注意为什么不是String ？")])]),t._v(" "),a("p",[t._v("由于Symbol和BigInt的出现，对它们调用new都会报错，目前ES6规范也不建议用new来创建基本类型的包装类。")])]),t._v(" "),a("h2",{attrs:{id:"使用建议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用建议"}},[t._v("#")]),t._v(" 使用建议")]),t._v(" "),a("p",[t._v("并不推荐显式的创建原始包装类的实例，因为可能会存在一些问题。")]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" bool "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bool "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("p",[a("strong",[t._v("分析：")])]),t._v(" "),a("ul",[a("li",[t._v("变量 "),a("code",[t._v("bool")]),t._v(" 是一个对象，它的原始值是 "),a("code",[t._v("false")])]),t._v(" "),a("li",[t._v("对象 "),a("code",[t._v("bool")]),t._v(" 不是一个falsy值")]),t._v(" "),a("li",[t._v("所以 隐式转型之后，"),a("code",[t._v("bool")]),t._v(" 的 布尔值应该是"),a("code",[t._v("true")])]),t._v(" "),a("li",[t._v("因此会判断第二个，而第二个值是"),a("code",[t._v("true")]),t._v(" ，因此最后返回"),a("code",[t._v("true")])])]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("由于原始包装类型的存在，JavaScript中的原始值可以被当成对象来使用。有 3 种原始值包装类型：")]),t._v(" "),a("ul",[a("li",[t._v("Boolean")]),t._v(" "),a("li",[t._v("Number")]),t._v(" "),a("li",[t._v("String")])]),t._v(" "),a("p",[t._v("它们都具有以下特点：")]),t._v(" "),a("ul",[a("li",[t._v("每种包装类型都映射到同名的原始类型")]),t._v(" "),a("li",[a("strong",[t._v("以读模式访问原始值的时候")]),t._v("，后台会实例化一个原始值包装类型的对象，借助这个对象可以操作对应的数据")]),t._v(" "),a("li",[t._v("语句执行完毕后，包装对象会被自动销毁")])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("参考资料：")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.ituring.com.cn/book/2472",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 高级程序设计 第四版"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);